<?php

namespace ISETSO\UserBundle\Repository\User;

use ISETSO\UserBundle\Entity\User\User;
/**
 * User Repository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    
    /**
     * @return Query
     */
    public function findAll()
    {
        return $this->createQueryBuilder('f')->join('f.user', 'u');
    }

    /**
     * @param \ISETSO\UserBundle\Entity\User\User $user
     * @return Query
     */
    public function findByUser($user)
    {
        return $this->createQueryBuilder('f')
                        ->join('f.user', 'u')
                        ->where('u.id = :id')
                        ->setParameter('id',$user->getId());
    }

    /**
     * @param String $field
     * @param \ISETSO\UserBundle\Entity\User\User $user
     * @return Query
     */
    public function findByAnything($query , $field)
    {
        return  $query->andWhere('f.id like :search OR f.designation LIKE :search OR f.garenti LIKE :search OR u.username LIKE :search')
                    ->setParameter('search', '%'.$field.'%')
                    ->orderBy('f.id', 'ASC');
    }

	/**
     * @return int
     */
    public function getTotalUserNumber()
    {
    	return  $this->createQueryBuilder('f')
                        ->select('count(f) as TotalUserNumber')
                        ->getQuery()
                        ->getResult()[0]['TotalUserNumber'] - 1
                        ;
        
    }

    /**
     * @return array
     */
    public function getUsersOnligne()
    {
        return $this->createQueryBuilder('u')
                        ->select('u.username')
                        ->where('u.lastLogin > :isActiveNow')
                        ->setParameter('isActiveNow', new \DateTime('2 minutes ago'))
                        ->getQuery()
                        ->getResult();
                        ;
    }
}
